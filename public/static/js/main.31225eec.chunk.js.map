{"version":3,"sources":["backend/components/tasks/dropdown.jsx","backend/core/Helpers/DateHelper.js","backend/components/tasks/timer.jsx","backend/core/Helpers/TaskHelper.js","backend/core/Helpers/FakeAxiosHelper.js","backend/components/tasks/active-task-row.jsx","backend/components/tasks/task-row.jsx","backend/components/shared/loadingAnimation.jsx","backend/core/Helpers/AxiosHelper.js","backend/core/Helpers/IntHelper.js","backend/core/Helpers/AjaxHelper.js","backend/components/tasks/index.jsx","backend/components/reports/index.jsx","backend/components/shared/listing/RowActions.jsx","backend/components/shared/listing/table.jsx","backend/components/shared/colorPalette.jsx","backend/components/shared/popups/ConfirmDelete.jsx","backend/components/projects/index.jsx","backend/components/clients/index.jsx","backend/components/labels/index.jsx","App.js","serviceWorker.js","index.js"],"names":["DropDown","props","state","expand","handleChange","bind","toggleDropdown","handleOnBlur","this","setState","console","log","setTimeout","itemId","selectedName","itemColor","icon","items","options","map","o","i","selected","id","name","undefined","color","value","key","onClick","style","marginRight","width","height","background","className","length","substring","role","size","tabIndex","onBlur","React","Component","DateHelper","dayNames","shortName","monthNames","mysqlDateTime","toMysqlDateTime","Date","dateObj","hoursAndMinutesOnly","hours","getHours","toString","minutes","getMinutes","seconds","getSeconds","month","getMonth","day","getDate","getFullYear","dateTimeString","getTime","startTime","endTime","mysqlToSeconds","durationInSeconds","time","Math","floor","round","dateString","now","getDay","dateOfMonth","year","Timer","duration","intervalId","date","setInterval","startTimeInSeconds","currentTime","clearInterval","durationForDisplay","tasks","tasksByDate","task","dateKey","toMysqlDate","start_time","hasOwnProperty","push","t","description","fixDateTimes","end_time","total","isStarted","ActiveTaskRow","isActiveTask","showInput","showExtras","descriptionChanged","createTask","updateTask","startTimer","stopTimer","handleProjectChange","handleLabelChange","handleDescriptionChange","handleDescriptionOnBlur","hideInput","event","target","Object","keys","TaskHelper","projectId","assign","project_id","labelId","label_id","indexOf","getTimeOnly","nextProps","p","autoFocus","type","onChange","placeholder","projects","labels","displayDuration","TaskRow","toggleTimer","hideExtras","hasNotBeenCreated","onMouseOver","onMouseLeave","displayTime","deleteTask","LoadingAnimation","get","url","urlencode","send","post","data","put","delete","requestType","qs","stringify","Promise","resolve","reject","axios","defaults","headers","token","document","querySelector","getAttribute","err","withCredentials","toLowerCase","then","response","catch","error","status","window","location","href","validationErrors","errors","request","message","config","generateRandomInt","min","max","ceil","random","client_id","color_id","created_at","updated_at","AjaxHelper","AxiosHelper","emptyTask","emptyLabel","emptyProject","loading","activeTask","Ajax","res","currentState","isDone","concat","filter","fillDefaultValues","unshift","tasksRows","sortTasksByDate","formatDateHeading","dailyTotal","CSSTransition","in","appear","timeout","classNames","LineChart","require","Line","Reports","RowActions","paddingTop","edit","List","cellSpacing","head","columns","c","displayName","v","item","split","project","ColorPalette","colors","backgroundColor","ConfirmDelete","text","close","Projects","clients","showPopup","showClientDropdown","showColorPalette","activeProject","savingToDb","tableConfig","create","store","save","hidePopup","changeColor","getColorById","getColorValueById","toggleColorPalette","handleValidationErrors","clearValidationErrors","getClientById","getClientNameById","changeClient","toggleClientDropdown","hideDropdowns","confirmDelete","newState","colorId","clientId","client","emptyClient","Clients","activeClient","storingNewClient","deleteClient","editClient","createClient","storeClient","saveClient","Labels","activeLabel","storingNewLabel","label","logout","App","exact","to","activeClassName","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31225eec.chunk.js","sourcesContent":["import React from 'react';\n\nimport { FaFolder, FaTag } from 'react-icons/fa';\n\nclass DropDown extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expand: false,\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n        this.handleOnBlur = this.handleOnBlur.bind(this);\n    }\n\n    toggleDropdown() {\n        this.setState({ expand: !this.state.expand });\n    }\n\n    handleOnBlur() {\n        console.log('on blur');\n        setTimeout(() => this.setState({expand: false}), 0);\n    }\n\n    handleChange(itemId) {\n\n        this.setState({ expand: false });\n        // Call parent handler.\n        this.props.handleChange(itemId);\n    }\n\n    render() {\n        const props = this.props;\n        let selectedName;\n        let itemColor;\n        const items = props.options.map((o, i) => {\n            if (props.selected !== 0 && props.selected === o.id) {\n                selectedName = o.name;\n                if (o.color !== undefined) {\n                    itemColor = o.color.value;\n                }\n            }\n\n            \n\n            return (\n                <li \n                    key={o.id} \n                    onClick={ () => this.handleChange(o.id) } >\n                        {\n                            o.color !== undefined\n                            ? <span \n                                style={{\n                                    marginRight: '10px', \n                                    width: '8px',\n                                    height: '8px',\n                                    background: `hsl(${o.color.value}`\n                                }}\n                                className='ttr-dropdown-project-dot'></span>\n                            : ''\n                        }\n                    { o.name.length > 25\n                        ? o.name.substring(0, 25) + '...'\n                        : o.name\n                    }\n                </li>\n            );\n        });\n\n        let icon;\n        switch (props.role) {\n            case 'project-select':\n                icon = <FaFolder size={14}/>;\n                break;\n            case 'label-select':\n                icon = <FaTag size={14}/>;\n                break;\n            default:\n                icon = <FaFolder size={14}/>;\n        }\n\n        return (\n            <div \n                className={ \n                    (selectedName ? 'ttr-dropdown ttr-' + props.role + ' ' : 'ttr-dropdown ttr-no-selected ') + (this.state.expand ? 'ttr-dropdown-expanded' : '')} \n            >\n                <div className='ttr-dropdown-list-wrapper'\n                    tabIndex={0}\n                    onClick={this.toggleDropdown} \n                    onBlur={this.handleOnBlur} \n                >\n                    <div \n                        className='ttr-dropdown-icon'\n                        style={ itemColor ? {'color': `hsl(${itemColor})`} : {} }\n                    >\n                        { \n                            selectedName \n                                ? (props.role === 'project-select' ? <div><span style={{background: (itemColor ? `hsl(${itemColor})`: '') }}className='ttr-dropdown-project-dot'></span>{selectedName}</div> : selectedName)\n                                : icon \n                        }\n                    </div>\n                    { this.state.expand \n                        ? <div className='ttr-dropdown-list box-shadow-heavy'>\n                                <ul>{items}</ul>\n                            </div>\n                        : ''\n                    }\n                </div>\n            </div>\n        );\n    }\n    \n};\n\nexport default DropDown;","class DateHelper {\n\n    constructor() {\n        this.dayNames = [\n            {name: 'sunday', shortName: 'sun'},\n            {name: 'monday', shortName: 'mon'},\n            {name: 'tuesday', shortName: 'tue'},\n            {name: 'wednesday', shortName: 'wed'},\n            {name: 'thursday', shortName: 'thu'},\n            {name: 'friday', shortName: 'fri'},\n            {name: 'saturday', shortName: 'sat'}\n        ]\n    \n        this.monthNames = [\n            {name: 'january', shortName: 'jan'},\n            {name: 'february', shortName: 'feb'},\n            {name: 'march', shortName: 'mar'},\n            {name: 'april', shortName: 'apr'},\n            {name: 'may', shortName: 'may'},\n            {name: 'june', shortName: 'jun'},\n            {name: 'july', shortName: 'jul'},\n            {name: 'august', shortName: 'aug'},\n            {name: 'september', shortName: 'sep'},\n            {name: 'october', shortName: 'oct'},\n            {name: 'november', shortName: 'nov'},\n            {name: 'december', shortName: 'dec'},\n        ]\n    }\n    \n\n    getTimeOnly(mysqlDateTime) {        \n        return this.toMysqlDateTime(new Date(mysqlDateTime), true);\n    }\n\n    toMysqlDateTime(dateObj, hoursAndMinutesOnly=false) {\n        const hours = (dateObj.getHours() < 10) ? \"0\" + dateObj.getHours().toString() : dateObj.getHours();\n        const minutes = (dateObj.getMinutes() < 10) ? \"0\" + dateObj.getMinutes().toString() : dateObj.getMinutes();\n\n        if (hoursAndMinutesOnly)\n            return hours + \":\" + minutes;\n\n        const seconds = (dateObj.getSeconds() < 10) ? \"0\" + dateObj.getSeconds().toString() : dateObj.getSeconds();\n\n        const month = ((dateObj.getMonth() + 1) < 10) ? \"0\" + (dateObj.getMonth() + 1).toString() : (dateObj.getMonth() + 1);\n        const day = (dateObj.getDate() < 10) ? \"0\" + dateObj.getDate().toString() : dateObj.getDate();\n\n        return dateObj.getFullYear() + \"-\" + month + \"-\" + day + \" \" + hours + \":\" + minutes + \":\" + seconds;\n    }\n\n    toMysqlDate(dateObj) {\n        const month = ((dateObj.getMonth() + 1) < 10) ? \"0\" + (dateObj.getMonth() + 1).toString() : (dateObj.getMonth() + 1);\n        const day = (dateObj.getDate() < 10) ? \"0\" + dateObj.getDate().toString() : dateObj.getDate();\n\n        return dateObj.getFullYear() + \"-\" + month + \"-\" + day;\n    }\n\n    /**\n     * \n     * @param {string} dateTimeString e.g. '2018-06-24 11:00:21'\n     */\n    mysqlToSeconds(dateTimeString) {\n        return new Date(dateTimeString).getTime() / 1000;\n    }\n\n    durationInSeconds(startTime, endTime) {\n        return this.mysqlToSeconds(endTime) - this.mysqlToSeconds(startTime);\n    }\n\n    durationForTitle(durationInSeconds) {\n\n        var time = '';\n    \n        // get seconds\n        // var seconds = Math.round(durationInSeconds % 60);\n    \n        // remove seconds from the date\n        durationInSeconds = Math.floor(durationInSeconds / 60);\n    \n        // get minutes\n        var minutes = Math.round(durationInSeconds % 60);\n    \n        // remove minutes from the date\n        durationInSeconds = Math.floor(durationInSeconds / 60);\n    \n        // get hours\n        var hours = Math.round(durationInSeconds % 24);\n    \n        // remove hours from the date\n        durationInSeconds = Math.floor(durationInSeconds / 24);\n    \n        if (hours > 0) {\n            time += hours + ' h ';\n        }\n    \n        if (minutes > 0) {\n            time += minutes + ' min ';\n        }\n    \n        return time;\n    }\n    \n    durationForDisplay(durationInSeconds) {\n    //        /* if (typeof durationInSeconds !== \"string\") {\n    //         return false;\n    //         }*/\n    \n        var time = '';\n    \n        // get seconds\n        var seconds = Math.round(durationInSeconds % 60);\n    \n        // remove seconds from the date\n        durationInSeconds = Math.floor(durationInSeconds / 60);\n    \n        // get minutes\n        var minutes = Math.round(durationInSeconds % 60);\n    \n        // remove minutes from the date\n        durationInSeconds = Math.floor(durationInSeconds / 60);\n    \n        // get hours\n        var hours = Math.round(durationInSeconds % 24);\n    \n        // remove hours from the date\n        durationInSeconds = Math.floor(durationInSeconds / 24);\n    \n        // the rest of durationInSeconds is number of days\n        // var days = durationInSeconds ;\n    \n        /*if (days > 0) {\n         time += days + 'd ';\n         }*/\n    \n        if (hours > 0) {\n            time += (hours < 10) ? ('0' + hours + ':') : (hours + ':');\n        } else {\n            time += '00:';\n        }\n    \n        if (minutes > 0) {\n            time += (minutes < 10) ? ('0' + minutes + ':') : (minutes + ':');\n        } else {\n            time += '00:';\n        }\n    \n        if (seconds > 0) {\n            time += (seconds < 10) ? ('0' + seconds) : seconds;\n        } else {\n            time += '00';\n        }\n    \n        return time;\n    }\n\n    // @param string dateString\n    formatDateHeading(dateString) {\n        const now = new Date();\n        const dateObj = new Date(dateString);\n    \n        const day = this.dayNames[dateObj.getDay()].shortName;\n        const month = this.monthNames[dateObj.getMonth()].shortName;\n        const dateOfMonth = dateObj.getDate();\n        const year = now.getFullYear() === dateObj.getFullYear() ? '' : dateObj.getFullYear(); // Only show year if the date is not from the current year.\n    \n        if (\n            dateObj.getFullYear() === now.getFullYear()\n            && dateObj.getMonth() === now.getMonth()\n            && dateObj.getDate() === now.getDate()\n        ) {\n            return 'today';\n        }\n        return `${day} ${dateOfMonth} ${month} ${year}`;\n    }\n}\n\nexport default DateHelper;","import React from 'react';\nimport DateHelper from '../../core/Helpers/DateHelper';\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            duration: 0, // in seconds\n            intervalId: 0,\n        };\n\n        this.date = new DateHelper();\n    }\n\n    componentDidMount() {\n\n        console.log('timer mounted', this.props.startTime);\n       \n        const intervalId = setInterval(() => {\n\n            console.log('interval ');\n            this.setState({intervalId});\n\n            if (this.props.startTime === 0) {\n                return;\n            }\n    \n            const startTime = new Date(this.props.startTime).getTime();\n            const startTimeInSeconds = startTime / 1000;\n            const currentTime = new Date().getTime() / 1000;\n            const duration = Math.round(currentTime - startTimeInSeconds);\n\n            this.setState({duration});\n\n        }, 1000);\n    }\n\n\n    componentWillUnmount() {\n        console.log('timer clear interval');\n        clearInterval(this.state.intervalId);\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.date.durationForDisplay(this.state.duration)}\n            </div>\n        );\n    }\n}\n\nexport default Timer;","import DateHelper from './DateHelper';\n\nclass TaskHelper {\n\n    constructor() {\n        this.date = new DateHelper();\n    }\n    \n    // Create a object that stores each task by it's date.\n    sortTasksByDate(tasks) {\n        let tasksByDate = {};\n        for ( let i=0; i < tasks.length; i++ ) {\n            let task    = tasks[i];\n            let dateKey = this.date.toMysqlDate(new Date(task.start_time));\n            \n            if ( ! tasksByDate.hasOwnProperty(dateKey) ) {\n                tasksByDate[dateKey] = [];\n            }\n            \n            tasksByDate[dateKey].push(task);\n        }\n\n        return tasksByDate;\n    }\n\n    fillDefaultValues(tasks) {\n        return tasks.map(t => {\n            if (t.description === null) {\n                t.description = '';\n            }\n\n            return this.fixDateTimes(t);\n        });\n    }\n\n    fixDateTimes(task) {\n        let t = {...task};\n\n        if (task.start_time) {\n            // take utc (iso 8601) time from server and create new local time from it.\n            t.start_time = new DateHelper().toMysqlDateTime(new Date(t.start_time));\n\n            if (task.end_time) {\n                // take utc (iso 8601) time from server and create new local time from it.\n                t.end_time = new DateHelper().toMysqlDateTime(new Date(t.end_time));\n            }\n        }\n\n        return t;\n    }\n\n    dailyTotal(tasks) {\n        let total = 0;\n        for (let i=0; i < tasks.length; i++) {\n            let startTime = tasks[i].start_time;\n            let endTime = tasks[i].end_time;\n            let duration = this.date.durationInSeconds(startTime, endTime);\n            total += duration;\n        }\n\n        return this.date.durationForDisplay(total);\n    }\n    \n\n    hasNotBeenCreated(task) {\n        return !task.id;\n    }\n\n    isStarted(task) {\n\n        if (!task.start_time)\n            return false;\n\n        return new Date(task.start_time).getTime() > 0;\n    }\n\n    // Check if a task is done (has a valid end date).\n    isDone(task) {\n\n        if (!task.end_time)\n            return false;\n\n        return this.isStarted(task) && new Date(task.end_time).getTime() > 0;\n    }\n}\n\nexport default new TaskHelper();","import { generateRandomInt } from './IntHelper';\n\nconst delay = 1000;\n\nconst tasks = [\n\t{\n\t\tid: 2,\n\t\tdescription: null,\n\t\tlabel_id: null,\n\t\tproject_id: null,\n\t\tstart_time: \"2019-11-10 09:20:51\",\n\t\tend_time: \"2019-11-10 09:21:13\",\n\t\tcreated_at: \"2019-11-10 07:20:52\",\n\t\tupdated_at: \"2019-11-10 07:21:13\",\n\t},\n\t{\n\t\tid: 3,\n\t\tdescription: null,\n\t\tlabel_id: null,\n\t\tproject_id: null,\n\t\tstart_time: \"2019-11-10 10:20:51\",\n\t\tend_time: \"2019-11-10 10:21:13\",\n\t\tcreated_at: \"2019-11-10 08:20:52\",\n\t\tupdated_at: \"2019-11-10 08:21:13\",\n\t},\n];\n\nlet projects = [];\nlet day = 1;\nfor (let i=1; i < 20; i++) {\n\tday++;\n\tprojects.push({\n\t\tid: i,\n\t\tclient_id: generateRandomInt(1, 3),\n\t\tcolor_id: generateRandomInt(1, 9),\n\t\tname: i === 5 ? `Veryveryverylongprojectname this is` : `This is project ${i}`,\n\t\tcreated_at: `2019-11-${day} 07:19:21`,\n\t\tupdated_at: `2019-11-${day} 07:19:21`,\n\t});\n}\n\nconst clients = [\n\t{\n\t\tid: 1,\n\t\tname: \"client 1\",\n\t\tcreated_at: \"2019-11-10 07:18:10\",\n\t\tupdated_at: \"2019-11-10 07:18:10\",\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"client 2\",\n\t\tcreated_at: \"2019-11-10 07:18:10\",\n\t\tupdated_at: \"2019-11-10 07:18:10\",\n\t},\n\t{\n\t\tid: 3,\n\t\tname: \"client 3\",\n\t\tcreated_at: \"2019-11-10 07:18:10\",\n\t\tupdated_at: \"2019-11-10 07:18:10\",\n\t}\n];\n\nconst labels = [\n\t{\n\t\tid: 1,\n\t\tname: \"development\",\n\t\tcreated_at: \"2019-11-10 07:20:32\",\n\t\tupdated_at: \"2019-11-10 07:20:45\",\t\n\t},\n\t{\n\t\tid: 2,\n\t\tname: \"Research\",\n\t\tcreated_at: \"2019-11-10 07:20:32\",\n\t\tupdated_at: \"2019-11-10 07:20:45\",\t\n\t},\n\t{\n\t\tid: 4,\n\t\tname: \"Meeting\",\n\t\tcreated_at: \"2019-11-10 07:20:32\",\n\t\tupdated_at: \"2019-11-10 07:20:45\",\t\n\t},\n];\n\nconst colors = [\n\t{\n\t\tid: 1,\n\t\t'name': 'green', \n\t\t'value': '171, 47%, 52%', \n\t\t'order': 1\n\t},\n\t{\n\t\tid: 2,\n\t\t'name': 'red', \n\t\t'value': '359, 100%, 62%', \n\t\t'order': 2\n\t},\n\t{\n\t\tid: 3,\n\t\t'name': 'yellow', \n\t\t'value': '40, 92%, 58%', \n\t\t'order': 3\n\t},\n\t{\n\t\tid: 4,\n\t\t'name': 'blue', \n\t\t'value': '201, 97%, 36%', \n\t\t'order': 4\n\t},\n\t{\n\t\tid: 5,\n\t\t'name': 'orange', \n\t\t'value': '13, 97%, 55%', \n\t\t'order': 5\n\t},\n\t{\n\t\tid: 6,\n\t\t'name': 'pink', \n\t\t'value': '351, 76%, 68%', \n\t\t'order': 6\n\t},\n\t{\n\t\tid: 7,\n\t\t'name': 'purple', \n\t\t'value': '307, 21%, 48%', \n\t\t'order': 7\n\t},\n\t{\n\t\tid: 8,\n\t\t'name': 'turquoise', \n\t\t'value': '187, 52%, 65%', \n\t\t'order': 8\n\t},\n\t{\n\t\tid: 9,\n\t\t'name': 'grey', \n\t\t'value': '240, 6%, 67%', \n\t\t'order': 9\n\t},\n];\n\n// function delayPromise(duration) {\n// \treturn function(...args){\n// \t\treturn new Promise(function(resolve, reject) {\n// \t\t\tsetTimeout(function() {\n// \t\t\t\tresolve(...args);\n// \t\t\t}, duration);\n// \t\t});\n// \t};\n// }\n\nexport default {\n\n\t/**\n\t * Send a Get request.\n\t *\n\t * @param {object} data\n\t */\n\tget(url, urlencode=true) {\n\n\t\tlet response = [];\n\t\tswitch(url) {\n\t\t\tcase 'app/tasks':\n\t\t\tcase '/app/tasks':\n\t\t\tcase '/app/tasks/':\n\n\t\t\t\t\tresponse['tasks'] = tasks;\n\t\t\t\t\tbreak;\n\t\t\tcase '/app/projects':\n\t\t\t\tresponse['projects'] = projects.map((p) => {\n\t\t\t\t\tp.client = clients.filter(c => c.id === p.client_id)[0];\n\t\t\t\t\tp.color = colors.filter(c => c.id === p.color_id)[0];\n\t\t\t\t\treturn p;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase '/app/clients':\n\t\t\t\tresponse['clients'] = clients;\n\t\t\t\tbreak;\n\t\t\tcase '/app/labels':\n\t\t\t\tresponse['labels'] = labels;\n\t\t\t\tbreak;\n\t\t\tcase '/app/colors':\n\t\t\t\tresponse['colors'] = colors;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn Promise.reject(`FakeAjaxHelper error: ${url} not found`);\n\t\t}\n\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tresolve(response);\n\t\t\t}, delay);\n\t\t});\n\t},\n\n\t/**\n\t * Send a POST request.\n\t *\n\t * @param {object} data\n\t */\n\tpost(url, data, urlencode=true ) {\n\t\tlet response = [];\n\t\tswitch(url) {\n\t\t\t// case '/app/tasks':\n\t\t\t// case '/app/tasks/':\n\t\t\t// \t\tresponse['tasks'] = tasks;\n\t\t\t// \t\tbreak;\n\t\t\tcase '/app/projects':\n\t\t\t\tlet p = data;\n\t\t\t\tp.id = generateRandomInt(5000, 10000);\n\t\t\t\tp.client = clients.filter(c => c.id === p.client_id)[0];\n\t\t\t\tp.color = colors.filter(c => c.id === p.color_id)[0];\n\t\t\t\tresponse['project'] = p;\n\t\t\t\tbreak;\n\t\t\tcase '/app/clients':\n\t\t\t\tlet c = data;\n\t\t\t\tc.id = generateRandomInt(5000, 10000);\n\t\t\t\tresponse['client'] = c;\n\t\t\t\tbreak;\n\t\t\tcase '/app/labels':\n\t\t\t\tlet l = data;\n\t\t\t\tl.id = generateRandomInt(5000, 10000);\n\t\t\t\tresponse['label'] = l;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn Promise.reject(`FakeAjaxHelper error: Method POST ${url} not found`);\n\t\t}\n\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tresolve(response);\n\t\t\t}, delay);\n\t\t});\n\t},\n\n\t/**\n\t * Send a PUT request.\n\t *\n\t * @param {object} data\n\t */\n\tput(url, data, urlencode=true ) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tresolve([]);\n\t\t\t}, delay);\n\t\t});\n\t},\n\n\t/**\n\t * Send a DELETE request.\n\t *\n\t * @param {object} data\n\t */\n\tdelete(url, data, urlencode=true ) {\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tresolve([]);\n\t\t\t}, delay);\n\t\t});\n\t},\n\n};\n","import React from 'react';\nimport DropDown from './dropdown.jsx';\nimport DisplayTimer from './timer.jsx';\nimport DateHelper from '../../core/Helpers/DateHelper';\nimport TaskHelper from '../../core/Helpers/TaskHelper';\n\n// import { MdDelete } from 'react-icons/md';\n\n\nimport { FaStop, FaPlay } from 'react-icons/fa';\n\n//\n// const getProjectName = (projectId, projects) => {\n//\n//     for (let i=0; i < projects.length; i++) {\n//         let project = projects[i];\n//         if (project.id == projectId) {\n//             return project.name;\n//         }\n//     }\n//\n//     return 'no project';\n// };\n//\n// const getLabelName = (labelId, labels) => {\n//\n//     for (let i=0; i < labels.length; i++) {\n//         let label = labels[i];\n//         if (label.id == labelId) {\n//             return label.name;\n//         }\n//     }\n//\n//     return '';\n// };\n\nclass ActiveTaskRow extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isActiveTask: false,\n            showInput: false,\n            showExtras: false,\n            descriptionChanged: false,\n            task: {\n                description: '',\n                start_time: 0,\n            },\n        }\n\n        this.date = new DateHelper();\n\n        this.createTask                 = this.createTask.bind(this);\n        this.updateTask                 = this.updateTask.bind(this);\n        this.startTimer                 = this.startTimer.bind(this);\n        this.stopTimer                  = this.stopTimer.bind(this);\n        this.handleProjectChange        = this.handleProjectChange.bind(this);\n        this.handleLabelChange          = this.handleLabelChange.bind(this);\n        this.handleDescriptionChange    = this.handleDescriptionChange.bind(this);\n        this.handleDescriptionOnBlur    = this.handleDescriptionOnBlur.bind(this);\n        this.showInput                  = this.showInput.bind(this);\n        this.hideInput                  = this.hideInput.bind(this);\n    }\n\n    handleDescriptionChange(event) {\n        const task = this.state.task;\n        task.description = event.target.value;\n\n        this.setState({task, descriptionChanged: true});\n    }\n\n    showInput() {\n        this.setState({showInput: true});\n    }\n\n    hideInput() {\n        this.setState({showInput: false});\n    }\n\n    handleDescriptionOnBlur(event) {\n        this.hideInput();\n\n        if (this.state.descriptionChanged && this.state.task.id) {\n            this.setState({descriptionChanged: false});        \n            this.updateTask();        \n        }\n    }\n\n    createTask(task={}) {\n        console.log('task row create', task);\n        if (Object.keys(task).length > 0) {\n            this.props.createTask(task);\n            return;\n        }\n\n        this.props.createTask(this.state.task);\n    }\n\n    updateTask(task={}) {\n        let t = Object.keys(task).length > 0 ? {...task} : {...this.state.task};\n\n        if (!t.id) {\n            this.createTask(task);\n            return;\n        }\n\n        this.props.updateTask(t, this.state.isActiveTask);\n    }\n\n    startTimer() {\n        let task = {...this.state.task};\n\n        if (TaskHelper.isStarted(task)) \n            return;\n\n        task.start_time = this.date.toMysqlDateTime(new Date());\n        this.updateTask(task);    \n    }\n\n    stopTimer() {\n        let task = {...this.state.task};\n\n        if ( ! TaskHelper.isStarted(task) ) \n            return;\n\n        task.end_time = this.date.toMysqlDateTime(new Date());\n        this.updateTask(task);\n    }\n\n    handleProjectChange(projectId) {\n        this.updateTask(Object.assign(this.state.task, {project_id: projectId}));\n    }\n\n    handleLabelChange(labelId) {\n        this.updateTask(Object.assign(this.state.task, {label_id: labelId}));\n    }\n\n    displayDuration(task) {\n        let date = new DateHelper();\n        const durationInSeconds = date.mysqlToSeconds(task.end_time) - date.mysqlToSeconds(task.start_time);\n        return date.durationForDisplay(durationInSeconds);\n    }\n\n    // @param string mysqlDateTime\n    displayTime(mysqlDateTime) {\n        let date = new DateHelper();\n        if (mysqlDateTime && mysqlDateTime.indexOf('1970') === -1) {\n            return date.getTimeOnly(mysqlDateTime);\n        }\n        return '';\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.task !== this.state.task) {\n            this.setState({task: nextProps.task});\n        }\n    }\n\n    componentDidMount() {\n        const p = this.props;\n        const isActiveTask = p.isActiveTask !== undefined ? p.isActiveTask : false;\n        this.setState({task: p.task, isActiveTask});\n    }\n\n    render() {\n        const props = this.props;\n        const task = this.state.task;\n        return (\n            <li className=\"timer-active-task-row\" >\n                <div className=\"ttr-left\">\n                    <div className=\"ttr-description-wrapper\" >\n                        {\n                            this.state.showInput === false \n                                ?   <div className='ttr-description'\n                                        onClick={ this.showInput }>{ task.description ? task.description : 'Type task description...' }</div>\n                                : \n                                    <input \n                                        autoFocus\n                                        size={ task.description ? task.description.length : 15 }\n                                        className={ 'ttr-description-input ' + (this.state.showExtras ? ' ttr-description-input-active' : '')}\n                                        type=\"text\" \n                                        onChange={ this.handleDescriptionChange } \n                                        onBlur={ this.handleDescriptionOnBlur }\n                                        value={ task.description }\n                                        placeholder=\"Type task description...\"\n                                    />\n                        }\n                    </div>\n                </div>\n                \n                <div className=\"ttr-active-right\">\n                    <DropDown \n                        selected={ task.project_id } \n                        handleChange={ this.handleProjectChange } \n                        options={ props.projects }\n                        role=\"project-select\"\n                    />\n                    <DropDown \n                        selected={ task.label_id } \n                        handleChange={ this.handleLabelChange } \n                        options={ props.labels } \n                        role=\"label-select\"\n                    />\n                    <div className=\"ttr-last\">\n                        <div className=\"ttr-display-timer\">\n                            { TaskHelper.isStarted(task) ? <DisplayTimer startTime={task.start_time} /> : this.displayDuration(task) }\n                        </div> \n                        <div className=\"ttr-actions\">\n                            {\n                                ! TaskHelper.isStarted(task)\n                                    ? \n                                        <div \n                                            className=\"ttr-start-button\"\n                                            onClick={this.startTimer}>\n                                            <FaPlay size={15} />\n                                        </div>\n                                    : \n                                        <div \n                                            className=\"ttr-stop-button\"\n                                            onClick={this.stopTimer}>\n                                            <FaStop size={15} />\n                                        </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </li>\n        );\n    }\n    \n};\n\nexport default ActiveTaskRow;","import React from 'react';\nimport DropDown from './dropdown.jsx';\nimport DisplayTimer from './timer.jsx';\nimport DateHelper from '../../core/Helpers/DateHelper';\nimport TaskHelper from '../../core/Helpers/TaskHelper';\n\nimport { MdDelete } from 'react-icons/md';\n\nimport { FaStop, FaPlay } from 'react-icons/fa';\n\n\n\n// const getProjectName = (projectId, projects) => {\n//\n//     for (let i=0; i < projects.length; i++) {\n//         let project = projects[i];\n//         if (project.id === projectId) {\n//             return project.name;\n//         }\n//     }\n//\n//     return 'no project';\n// };\n//\n// const getLabelName = (labelId, labels) => {\n//\n//     for (let i=0; i < labels.length; i++) {\n//         let label = labels[i];\n//         if (label.id === labelId) {\n//             return label.name;\n//         }\n//     }\n//\n//     return '';\n// };\n\nclass TaskRow extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isActiveTask: false,\n            showInput: false,\n            showExtras: false,\n            descriptionChanged: false,\n            task: {\n                description: '',\n                start_time: 0,\n            },\n        }\n\n        this.date = new DateHelper();\n\n        this.createTask                 = this.createTask.bind(this);\n        this.updateTask                 = this.updateTask.bind(this);\n        this.toggleTimer                = this.toggleTimer.bind(this);\n        this.handleProjectChange        = this.handleProjectChange.bind(this);\n        this.handleLabelChange          = this.handleLabelChange.bind(this);\n        this.handleDescriptionChange    = this.handleDescriptionChange.bind(this);\n        this.handleDescriptionOnBlur    = this.handleDescriptionOnBlur.bind(this);\n        this.showInput                  = this.showInput.bind(this);\n        this.hideInput                  = this.hideInput.bind(this);\n        this.showExtras                  = this.showExtras.bind(this);\n        this.hideExtras                  = this.hideExtras.bind(this);\n    }\n\n    showExtras() {\n        console.log('showExtras');\n        this.setState({showExtras: true});\n    }\n\n    hideExtras() {\n        console.log('hideExtras');\n        this.setState({showExtras: false});\n    }\n\n    handleDescriptionChange(event) {\n        const task = this.state.task;\n        task.description = event.target.value;\n\n        this.setState({task, descriptionChanged: true});\n    }\n\n    showInput() {\n        this.setState({showInput: true});\n    }\n\n    hideInput() {\n        this.setState({showInput: false});\n    }\n\n    handleDescriptionOnBlur(event) {\n        this.hideInput();\n\n        if (this.state.descriptionChanged) {\n            this.setState({descriptionChanged: false});        \n            this.updateTask();        \n        }\n    }\n\n    createTask(task={}) {\n        console.log('task row create', task);\n        if (Object.keys(task).length > 0) {\n            this.props.createTask(task);\n            return;\n        }\n\n        this.props.createTask(this.state.task);\n    }\n\n    updateTask(task={}) {\n        let t;\n        if (Object.keys(task).length > 0) {\n            t = Object.assign({}, task);\n        } else {\n            t = Object.assign({}, this.state.task);\n        }\n\n        if (TaskHelper.hasNotBeenCreated(t)) {\n            this.createTask(task);\n            return;\n        }\n\n        this.props.updateTask(t, this.state.isActiveTask);\n    }\n\n    toggleTimer() {\n\n        let task            = Object.assign({}, this.state.task);\n        const date          = new Date();\n\n        if ( ! TaskHelper.isStarted(task) ) {\n            task.start_time = this.date.toMysqlDateTime(date);\n            this.updateTask(task);\n            return;\n        }\n\n        task.end_time = this.date.toMysqlDateTime(date);\n        this.updateTask(task);\n    }\n\n    handleProjectChange(projectId) {\n        this.updateTask(Object.assign(this.state.task, {project_id: projectId}));\n    }\n\n    handleLabelChange(labelId) {\n        this.updateTask(Object.assign(this.state.task, {label_id: labelId}));\n    }\n\n    displayDuration(task) {\n        let date = new DateHelper();\n        const durationInSeconds = date.mysqlToSeconds(task.end_time) - date.mysqlToSeconds(task.start_time);\n        return date.durationForDisplay(durationInSeconds);\n    }\n\n    // @param string mysqlDateTime\n    displayTime(mysqlDateTime) {\n        let date = new DateHelper();\n        if (mysqlDateTime && mysqlDateTime.indexOf('1970') === -1) {\n            return date.getTimeOnly(mysqlDateTime);\n        }\n        return '';\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.task !== this.state.task) {\n            this.setState({task: nextProps.task});\n        }\n    }\n\n    componentDidMount() {\n        const p = this.props;\n        const isActiveTask = p.isActiveTask !== undefined ? p.isActiveTask : false;\n        this.setState({task: p.task, isActiveTask});\n    }\n\n    render() {\n        const props = this.props;\n        const task = this.state.task;\n        return (\n            <li \n                onMouseOver={this.showExtras} \n                onMouseLeave={this.hideExtras}\n                className={(props.isActiveTask ? 'timer-active-task-row ' : 'timer-task-row ') + (this.state.showExtras ? ' timer-task-row-active' : '') } \n            >\n\n                <div className=\"ttr-left\">\n                        <div className=\"ttr-description-wrapper\" >\n                            {\n                                this.state.showInput === false \n                                ?   <div className='ttr-description'\n                                        onClick={this.showInput}>{task.description ? task.description : (props.isActiveTask ? 'Type task description...' : 'no description')}</div>\n                                : \n                                    <input \n                                        autoFocus\n                                        size={ task.description ? task.description.length : 15 }\n                                        className={ 'ttr-description-input ' + (this.state.showExtras ? ' ttr-description-input-active' : '')}\n                                        type=\"text\" \n                                        onChange={ this.handleDescriptionChange } \n                                        onBlur={ this.handleDescriptionOnBlur }\n                                        value={ task.description }\n                                        placeholder={props.isActiveTask ? 'Type task description...' : 'no description'}\n                                    />\n                            }\n                            \n                        </div>\n\n                        {   task.project_id \n                                ?\n                                <DropDown \n                                    selected={ task.project_id } \n                                    handleChange={ this.handleProjectChange } \n                                    options={ props.projects }\n                                    role=\"project-select\"\n                                />\n                                : \n                                (this.state.showExtras\n                                    ? \n                                    <DropDown \n                                        selected={ task.project_id } \n                                        handleChange={ this.handleProjectChange } \n                                        options={ props.projects }\n                                        role=\"project-select\"\n                                    />\n                                    : ''\n                                )\n                        }\n                        \n                </div>\n                \n                <div className=\"ttr-right\">\n                    {   task.label_id \n                                ?\n                                <DropDown \n                                    selected={ task.label_id } \n                                    handleChange={ this.handleLabelChange } \n                                    options={ props.labels } \n                                    role=\"label-select\"\n                                />\n                                : \n                                (this.state.showExtras\n                                    ? \n                                    <DropDown \n                                        selected={ task.label_id } \n                                        handleChange={ this.handleLabelChange } \n                                        options={ props.labels } \n                                        role=\"label-select\"\n                                    />\n                                    : <div style={{width: '100px'}}></div>\n                                )\n                        }\n                    <div className=\"ttr-last\">\n                        <div className=\"ttr-times\" >\n                            { ! props.isActiveTask \n                                ? <span>{this.displayTime(task.start_time)} - {this.displayTime(task.end_time)}</span> \n                                : ''\n                            }\n                        </div>\n                        <div className=\"ttr-display-timer\">\n                            { props.isActiveTask && TaskHelper.isStarted(task)\n                                ? <DisplayTimer startTime={task.start_time} />\n                                : this.displayDuration(task)\n                            }\n                        </div> \n                        <div className=\"ttr-actions\">\n                            { props.isActiveTask \n                                ? <div \n                                        className={TaskHelper.isStarted(task) ? 'ttr-stop-button' : 'ttr-start-button'}\n                                        onClick={this.toggleTimer}>\n                                        {TaskHelper.isStarted(task) ? <FaStop size={15} /> : <FaPlay size={15}/>}\n                                    </div>\n                                : ''\n                            }\n                            <span \n                                className=\"ttr-delete\"\n                                onClick={ () => props.deleteTask(task.id) }\n                            >\n                                <MdDelete size={20} />\n                            </span>\n                        </div>\n                    </div>\n                </div>\n                \n            </li>\n        );\n    }\n    \n};\n\nexport default TaskRow;","import React from 'react';\n\nconst LoadingAnimation = (props) => {\n    return (\n        <div className=\"loading-overlay\">\n            <div className=\"loading-container\">\n                <div>Loading</div>\n                <div className=\"lds-ellipsis\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoadingAnimation;","import axios from 'axios';\nimport qs from 'qs';\n\n\nexport default {\n\n\t/**\n\t * Send a Get request.\n\t *\n\t * @param {object} data\n\t */\n\tget(url, urlencode=true) {\n\t\treturn this.send( url, 'get', {}, urlencode);\n\t},\n\n\t/**\n\t * Send a POST request.\n\t *\n\t * @param {object} data\n\t */\n\tpost(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'post', data, urlencode);\n\t},\n\n\t/**\n\t * Send a PUT request.\n\t *\n\t * @param {object} data\n\t */\n\tput(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'put', data, urlencode);\n\t},\n\n\t/**\n\t * Send a DELETE request.\n\t *\n\t * @param {object} data\n\t */\n\tdelete(url, data, urlencode=true ) {\n\t\treturn this.send(url, 'delete', data, urlencode);\n\t\t// Note: When sending 'params' instead of data, Axios will add ?id=177 to this.url. (If you data is {id: 177}).\n\t\t// And then if using Express you can get the params in the query (req.query.id).\n\t},\n\n\tsend( url, requestType, data={}, urlencode=true ) {\n\n\t\tif ( data.length > 0 && urlencode === true) {\n\t\t\tdata = qs.stringify(data);\n\t\t}\n\n\t\treturn new Promise(\n\t\t\t( resolve, reject ) => {\n\t\t\t\taxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest'; // Tell server that this is a ajax request.\n\t\t\t\ttry {\n\t\t\t\t\tconst token = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\n\t\t\t\t\tif (token) {\n\t\t\t\t\t\taxios.defaults.headers['CSRF-Token'] = token;\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log('No csrf token found. ', err);\n\t\t\t\t}\n\n\t\t\t\taxios.defaults.withCredentials = true; // Send cookie to server.\n\t\t\t\taxios[ requestType.toLowerCase() ]( url, data )\n\t\t\t\t\t.then(response => resolve(response.data))\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tif (error.response) {\n\t\t\t\t\t\t\t// The request was made and the server responded with a status code\n\t\t\t\t\t\t\t// that falls out of the range of 2xx\n\t\t\t\t\t\t\t// console.log(error.response.data);\n\t\t\t\t\t\t\t// console.log(error.response.status);\n\t\t\t\t\t\t\t// console.log(error.response.headers);\n\n\t\t\t\t\t\t\t// If server session expired then just redirect to login page.\n\t\t\t\t\t\t\tconst status = error.response.status;\n\t\t\t\t\t\t\tif ( status === 401 || status === 403 || status === 419) {\n\t\t\t\t\t\t\t\tconsole.log('Ajax error: ', error);\n\t\t\t\t\t\t\t\twindow.location.href = '/login';\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (status === 422) {\n\t\t\t\t\t\t\t\treject( {validationErrors: error.response.data.errors});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treject( error.response.data );\n\t\t\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\t\t} else if (error.request) {\n\t\t\t\t\t\t// The request was made but no response was received\n\t\t\t\t\t\t// `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n\t\t\t\t\t\t// http.ClientRequest in node.js\n\t\t\t\t\t\tconsole.log(error.request);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t// Something happened in setting up the request that triggered an Error\n\t\t\t\t\t\tconsole.log('Error', error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(error.config);\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t});\n\t},\n};\n","export const generateRandomInt = function(min, max) {\n    min = Math.ceil(min);\n    max = Math.ceil(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n};","import AxiosHelper from './AxiosHelper';\nimport FakeAxiosHelper from './FakeAxiosHelper';\n\nlet AjaxHelper = AxiosHelper;\nif (process.env.NODE_ENV === 'development') {\n    AjaxHelper = FakeAxiosHelper;\n}\n\nexport default AjaxHelper;\n","import React from 'react';\nimport ActiveTaskRow from './active-task-row.jsx';\nimport TaskRow from './task-row.jsx';\nimport LoadingAnimation from '../shared/loadingAnimation';\n\nimport Ajax from '../../core/Helpers/AjaxHelper';\nimport DateHelper from '../../core/Helpers/DateHelper';\nimport TaskHelper from '../../core/Helpers/TaskHelper';\n\nimport { CSSTransition } from 'react-transition-group';\n\nvar emptyTask = {\n    description: '',\n};\n\nconst emptyLabel = {\n    id: 0,\n    name: 'none',\n};\n\nconst emptyProject = {\n    id: 0,\n    name: 'none',\n};\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            tasks: [],\n            activeTask: Object.assign({}, emptyTask),\n            projects: [],\n            labels: [],\n        };\n\n        this.date = new DateHelper();\n\n        this.createTask = this.createTask.bind(this);\n        this.updateTask = this.updateTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n    }\n    \n    createTask(task) {\n        \n        if (task.id)\n            return;\n\n        Ajax.post('app/tasks', task)\n            .then(res => {\n                this.setState( {activeTask: {task, ...TaskHelper.fixDateTimes(res.task)}} )\n            })\n            .catch(err => console.log('Task could not be created. Error: ', err));\n    }\n\n    updateTask(task, isActiveTask=false) {\n\n        if (!task.id)\n            return;\n\n        this.setState((currentState) => {\n\n            if ( isActiveTask ) {\n                if (TaskHelper.isDone(task)) {\n                    return {\n                        tasks: [task].concat(currentState.tasks),\n                        activeTask: Object.assign({}, emptyTask),\n                    };\n                }\n\n                return {\n                    activeTask: TaskHelper.fixDateTimes(task),\n                };\n            }\n\n            // replace old version of task with the new one.\n            return {\n                tasks: currentState.tasks.map((t, i) => {\n                    if (task.id !== t.id)\n                        return t;\n\n                    return TaskHelper.fixDateTimes(task);\n                }),\n            };\n\n        });\n\n        // Update server.\n        Ajax.put(`app/tasks/${task.id}`, task)\n            .catch(err => console.log('Task could not be updated. Error: ', err));\n    }\n\n    deleteTask(id) {\n\n        // todo handle activeTask as well.\n        this.setState((currentState) => {\n            const tasks = currentState.tasks.filter((task) => task.id !== id);\n            return {\n                tasks,\n            }\n        });\n\n        Ajax.delete(`app/tasks/${id}`, {})\n            .catch(err => console.log('Task could not be deleted. Error: ', err));\n    }\n\n    componentDidMount() {\n\n        Ajax.get('app/tasks')\n            .then(res => this.setState({tasks: TaskHelper.fillDefaultValues(res.tasks), loading: false }))\n            .catch(err => console.log('Could not fetch tasks. Error: ', err));\n\n        Ajax.get('app/tasks/active')\n            .then(res => {\n\n                if (res.task === undefined) {\n                    this.setState({ activeTask: Object.assign({}, emptyTask) });\n                    return;\n                }\n\n                this.setState({ activeTask: Object.assign({}, res.task) });\n            })\n            .catch(err => console.log('Could not fetch active task. Error: ', err));\n\n        Ajax.get('/app/projects')\n            .then(res => {\n                let projects = res.projects;\n                projects.unshift(emptyProject);\n                this.setState({projects})\n            })\n            .catch(err => console.log(err));\n\n        Ajax.get('/app/labels')\n            .then(res => {\n                let labels = res.labels;\n                labels.unshift(emptyLabel);\n                this.setState({labels})\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return (<LoadingAnimation/>);\n        }\n\n        let tasksRows = [];\n        let dateKey;\n        const tasks = TaskHelper.sortTasksByDate(this.state.tasks);\n\n        for (dateKey in tasks) {\n            if ( ! tasks.hasOwnProperty(dateKey) ) {\n                continue;\n            }\n\n            tasksRows.push(\n                <li key={dateKey} className='tasks-date-heading'>\n                    <div><h3>{this.date.formatDateHeading(dateKey)}</h3></div>\n                    <div><h3>{TaskHelper.dailyTotal(tasks[dateKey])}</h3></div>\n                </li>\n            );\n            tasksRows.push(tasks[dateKey].map((t, i) => \n                <TaskRow \n                    task={t} \n                    projects={this.state.projects} \n                    labels={this.state.labels} \n                    key={t.id} \n                    updateTask={this.updateTask}\n                    deleteTask={this.deleteTask}\n                />\n            ));\n        }\n\n        const activeTask = this.state.activeTask;\n\n        return (\n            <CSSTransition\n                    in={true}\n                    appear={true}\n                    timeout={300}\n                    classNames=\"fade\"\n                >\n                <div className='tasks-main'>\n                    <div>\n                        <ul className=\"tasks-rows\" >\n                            <ActiveTaskRow \n                                task={activeTask} \n                                projects={this.state.projects} \n                                labels={this.state.labels} \n                                key={activeTask.id} \n                                createTask={this.createTask} \n                                updateTask={this.updateTask}\n                                deleteTask={this.deleteTask}\n                                isActiveTask='true'\n                            />\n                        </ul>\n                    </div>\n                    <div>\n                        <ul className=\"tasks-rows\">\n                            {tasksRows}\n                        </ul>       \n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default Timer;","import React from 'react';\n\nimport Ajax from '../../core/Helpers/AjaxHelper';\n\nimport { CSSTransition } from 'react-transition-group';\n\nconst LineChart = require(\"react-chartjs\").Line;\n\nclass Reports extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n        }\n    }\n\n    componentDidMount() {\n        Ajax.post('/app/reports/stats', {'action': 'past-two-weeks'})\n            .then(res => {\n                console.log(res);\n                this.setState({data: res.data});\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n    \n        return (\n        <CSSTransition\n            in={true}\n            appear={true}\n            timeout={300}\n            classNames=\"fade\"\n            >\n            <div>\n                <div className='main-header'>\n                    <h1>Reports</h1>\n                </div>\n                { \n                    this.state.data.labels !== undefined \n                        ? <LineChart data={this.state.data} width=\"1000\" height=\"300\" /> \n                        : ''\n                }\n            </div>\n        </CSSTransition>\n        );\n    }\n};\n\nexport default Reports;","import React from 'react';\n\nimport { FaTrash, FaEdit } from 'react-icons/fa';\n\nconst RowActions = (props) => (\n    <td className='listing-td-actions'>\n        <div onClick={() => props.delete(props.id)}>\n            <FaTrash size={20}/>\n        </div>\n        <div style={{paddingTop: '6px'}}onClick={() => props.edit(props.id)}>\n            <FaEdit size={20}/>\n        </div>\n    </td>\n);\n\nexport default RowActions;","import React from 'react';\n\nimport RowActions from './RowActions';\nimport LoadingAnimation from '../loadingAnimation';\n\nconst List = (props) => { \n\n    if (props.loading) {\n        return (<LoadingAnimation/>);\n    }\n    \n    if (props.data.length < 1) {\n        return (<div>You don\\'t have any projects yet.</div>);\n    }\n    \n    return (\n        <div className='listing-table-wrapper'>\n            <table className='listing-table' cellSpacing='0'>\n                { props.config.head !== true \n                    ? <thead></thead>\n                    : \n                    <thead>\n                        <tr>\n                            {\n                                props.config.columns.map(c => <th key={c.name}>{c.displayName}</th>)\n                            }\n                        </tr>\n                    </thead>\n                }\n                <tbody>\n                    {\n                        props.data.map(v => \n                            <tr key={v.id}>\n                                {\n                                    props.config.columns.map(c => {\n\n                                        let item = '';\n                                        if (c.name.indexOf('.') !== -1) {\n\n                                            let keys = c.name.split('.');\n                                            for (let i=0; i < keys.length; i++) {\n\n                                                let key = keys[i];\n                                                if (!item && v[key] !== undefined && v[key] !== null) {\n                                                    item = v[key];\n                                                } else if (item[key] !== undefined) {\n                                                    item = item[key];\n                                                } else {\n                                                    item = '';\n                                                    break;\n                                                }\n                                            }\n                                        } else {\n                                            if (v[c.name] !== undefined) {\n                                                item = v[c.name];\n                                            }\n                                        }\n                                        let style = {};\n                                        if (c.size !== undefined) {\n                                            style = {width: c.size + '%'};\n                                        }\n                                        \n                                        return (\n                                            <td key={c.name} style={style}>\n                                                { props.config.project && c.name === 'name' && v.color.value\n                                                    ? \n                                                        <div className='listing-project-color-wrapper'>\n                                                            <span \n                                                                className='listing-project-color'\n                                                                style={{background: `hsl(${v.color.value})`}}>\n                                                            </span>\n                                                        </div>\n                                                    : ''\n                                                }\n                                                <div className='listing-item-wrapper'>{item}</div>\n                                                \n                                            </td>\n                                        );\n                                    })\n                                }\n                                <RowActions id={v.id} edit={props.edit} delete={props.delete} />\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default List;\n","import React from 'react';\n\nimport { FaCheck } from 'react-icons/fa';\n\n\nconst ColorPalette = (props) => (\n    <div className=\"color-palette\">\n        { props.colors.map(c => (\n            <div \n                key={c.id}\n                className='color-swatch' \n                onClick={() => props.handleChange(c.id)} \n                style={{ backgroundColor: `hsl(${ c.value })` }}\n            >\n                { c.id === props.selected ? <FaCheck /> : '' }\n            </div>\n            ))\n        }\n    </div>\n);\n\nexport default ColorPalette;\n\n        ","import React from 'react';\n\nimport { FaTimes } from 'react-icons/fa';\n\n\nconst ConfirmDelete = (props) => {\n    return (\n        <div>\n            <div className='popup-delete box-shadow-heavy' >\n                <div className=\"popup-form-row-1\">\n                    <h3 className=\"popup-heading\">{props.text}</h3>\n                    <div className=\"popup-close\" onClick={props.close} >\n                        <FaTimes size={20}/>\n                    </div>\n                </div>\n                <div className=\"popup-delete-row-2\">\n                    <div className=\"button delete-button\" onClick={props.delete}>Delete</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConfirmDelete;","import React from 'react';\nimport Ajax from '../../core/Helpers/AjaxHelper';\n\nimport List from '../shared/listing/table';\nimport ColorPalette from '../shared/colorPalette';\nimport ConfirmDelete from '../shared/popups/ConfirmDelete';\nimport LoadingAnimation from '../shared/loadingAnimation';\n\nimport { FaTimes, FaCaretDown, FaAngleDown } from 'react-icons/fa';\n\nimport { CSSTransition } from 'react-transition-group';\n\nconst emptyProject = {\n    name: '',\n    client_id: 0,\n    color_id: 1,\n};\n\nclass Projects extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            projects: [],\n            colors: [],\n            clients: [],\n            showPopup: false, // Valid values are: create, edit, delete and false.\n            showClientDropdown: false,\n            showColorPalette: false,\n            activeProject: {...emptyProject},\n            savingToDb: false,\n            errors: {},\n            tableConfig: {\n                head: true,\n                project: true,\n                columns: [\n                    {name: 'name', displayName: 'Project', size: 20},\n                    {name: 'client.name', displayName: 'Client', size: 20},\n                    // {name: 'total', displayName: 'Total'},\n    \n                ]\n            },\n        }\n\n        this.showPopup = this.showPopup.bind(this);\n        this.delete = this.delete.bind(this);\n        this.edit = this.edit.bind(this);\n        this.create = this.create.bind(this);\n        this.store = this.store.bind(this);\n        this.save = this.save.bind(this);\n        this.hidePopup = this.hidePopup.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.changeColor = this.changeColor.bind(this);\n        this.getColorById = this.getColorById.bind(this);\n        this.getColorValueById = this.getColorValueById.bind(this);\n        this.toggleColorPalette = this.toggleColorPalette.bind(this);\n        this.handleValidationErrors = this.handleValidationErrors.bind(this);\n        this.clearValidationErrors = this.clearValidationErrors.bind(this);\n        this.getClientById = this.getClientById.bind(this);\n        this.getClientNameById = this.getClientNameById.bind(this);\n        this.changeClient = this.changeClient.bind(this);\n        this.toggleClientDropdown = this.toggleClientDropdown.bind(this);\n        this.hideDropdowns = this.hideDropdowns.bind(this);\n        this.confirmDelete = this.confirmDelete.bind(this);\n    }\n\n    handleChange(event) {\n        let activeProject = {...this.state.activeProject};\n        activeProject.name = event.target.value;\n        this.setState({activeProject});\n    }\n\n    confirmDelete(id) {\n        this.showPopup('delete', id);\n    }\n\n    showPopup(type, id=0) {\n        let newState = {\n            showPopup: type,\n        };\n\n        if (id !== 0) {\n            newState.activeProject = this.state.projects.filter(c => c.id === id)[0];\n        }\n        this.setState(newState);\n    }\n\n    hidePopup() {\n        this.setState({\n            showPopup: false,\n            showColorPalette: false,\n            showClientDropdown: false,\n            errors: {},\n            activeProject: {...emptyProject},\n        });\n    }\n\n    hideDropdowns() {\n        if (this.state.showColorPalette === true) {\n            this.setState({showColorPalette: false});\n        }\n\n        if (this.state.showClientDropdown === true) {\n            this.setState({showClientDropdown: false});\n        }\n    }\n\n    toggleColorPalette() {\n        this.setState({showColorPalette: !this.state.showColorPalette});\n    }\n\n    changeColor(colorId) {\n        let activeProject = {...this.state.activeProject};\n        activeProject.color_id = colorId;\n        activeProject.color = this.getColorById(colorId);\n        this.toggleColorPalette();\n        this.setState({activeProject});\n    }\n\n    getColorById(colorId) {\n        const colors = this.state.colors.filter(c => c.id === colorId);\n\n        if (colors.length > 0) {\n            return colors[0];\n        }\n    }\n\n    getColorValueById(colorId) {\n        const color = this.getColorById(colorId);\n\n        if (color) {\n            return color['value'];\n        }\n\n        return '';\n    }\n\n    toggleClientDropdown() {\n        this.setState({showClientDropdown: !this.state.showClientDropdown});\n    }\n\n    changeClient(clientId) {\n        let activeProject = {...this.state.activeProject};\n        activeProject.client = this.getClientById(clientId);\n        activeProject.client_id = clientId;\n        this.toggleClientDropdown();\n        this.setState({activeProject});\n    }\n\n    getClientById(clientId) {\n        const clients = this.state.clients.filter(c => c.id === clientId);\n\n        if (clients.length > 0) {\n            return clients[0];\n        }\n    }\n\n    getClientNameById(clientId) {\n        const client = this.getClientById(clientId);\n        return client['name'];\n    }\n\n    delete() {\n        const id = this.state.activeProject.id;\n        const projects = [...this.state.projects].filter(c => c.id !== id);\n        this.setState({projects});\n        this.hidePopup();\n\n        Ajax.delete('/app/projects/' + id, {})\n            .catch(err => console.log(err));\n    }\n\n    edit(id) {\n        this.showPopup('edit', id);\n    }\n\n    save() {\n\n        if (this.state.activeProject.name === undefined || this.state.activeProject.name === '') {\n            this.handleValidationErrors({validationErrors: {name: 'Please enter a project name'}});\n            return;\n        }\n\n        if (!this.state.activeProject.id) {\n            return this.store();\n        }\n\n        const id = this.state.activeProject.id;\n        const projects = this.state.projects.map(p => {\n            if (id === p.id) {\n                return this.state.activeProject;\n            }\n            return p;\n        });\n        this.setState({projects});\n        this.hidePopup();\n        \n        Ajax.put('/app/projects/' + id, this.state.activeProject)\n            .then(() => this.clearValidationErrors())\n            .catch(err => this.handleValidationErrors(err));\n    }\n\n    create() {\n        this.showPopup('create');\n    }\n\n    store() {\n\n        // Just return if the Create button was already clicked.\n        if (this.state.savingToDb) {\n            return;\n        }\n\n        this.setState({savingToDb: true});\n        Ajax.post('/app/projects', this.state.activeProject)\n            .then(res => {\n                let projects = [...this.state.projects];\n                projects.push(res.project);\n                this.setState({projects, savingToDb: false}); \n                this.clearValidationErrors();\n                this.hidePopup();\n            })\n            .catch(err => {\n                this.handleValidationErrors(err);\n            })\n            .then(() => this.setState({savingToDb: false}));\n    }\n\n    clearValidationErrors() {\n        this.setState({errors: {}});\n    }\n\n    handleValidationErrors(errors) {\n        if (errors.validationErrors !== undefined) {\n            this.setState({errors: errors.validationErrors});\n        }\n    }\n\n    componentDidMount() {\n        Ajax.get('/app/projects')\n            .then(res => this.setState({projects: res.projects, loading: false}))\n            .catch(err => console.log(err));\n\n        Ajax.get('/app/clients')\n            .then(res => this.setState({clients: res.clients}))\n            .catch(err => console.log(err));\n\n        Ajax.get('/app/colors')\n            .then(res => this.setState({colors: res.colors}))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return (<LoadingAnimation/>);\n        }\n        \n        const showPopup = this.state.showPopup;\n\n        return (\n        <CSSTransition\n                in={true}\n                appear={true}\n                timeout={300}\n                classNames=\"fade\"\n                >\n            <div>\n\n                <div className='main-header'>\n                    <h1>Projects</h1>\n                    <div \n                        className=\"button create-button\" \n                        onClick={this.create}>Create Project\n                    </div>\n\n                </div>\n                \n                <div className={ 'popup-overlay ' + (showPopup ? '' : 'popup-hide')}>\n\n                    {\n                        showPopup === 'delete' \n                            ?\n                            <ConfirmDelete \n                                text={`Deleting Project ${this.state.activeProject.name}`}\n                                delete={this.delete}\n                                close={this.hidePopup}\n                            /> \n                            : \n                            <div>\n                                <div className=\"popup-form box-shadow-heavy\" onClick={this.hideDropdowns}>\n                                    <div className=\"popup-form-row-1\">\n                                        <h3 className=\"popup-heading\">{this.state.activeProject.id ? 'Edit' : 'Create'} project</h3>\n                                        <div className=\"popup-close\" onClick={this.hidePopup} ><FaTimes size={20}/></div>\n                                    </div>\n                                    <div className=\"popup-form-row-2\">\n                                        <div>\n                                            <div className='box-shadow-light'>\n                                                <input \n                                                    className=\"popup-input\" \n                                                    type=\"text\"\n                                                    value={this.state.activeProject.name} \n                                                    onChange={this.handleChange}\n                                                    placeholder='Project name...'\n                                                />\n                                                <div className='popup-selected-client-container' onClick={this.toggleClientDropdown}>\n                                                    <div className='popup-selected-client' >\n                                                        { \n                                                            this.state.activeProject.client_id \n                                                                ? this.getClientNameById(this.state.activeProject.client_id)\n                                                                : 'Select Client' \n                                                        }\n                                                    </div>\n                                                    <div className='popup-selected-client-caret'>\n                                                        <FaAngleDown size={20} />\n                                                    </div>\n                                                    {\n                                                        this.state.showClientDropdown \n                                                        ? \n                                                        <div className=\"popup-client-dropdown box-shadow-heavy\">\n                                                            {\n                                                                this.state.clients.length\n                                                                    ? \n                                                                    <ul>\n                                                                        {\n                                                                            this.state.clients.map(c => (\n                                                                                <li \n                                                                                    key={c.id} \n                                                                                    onClick={() => this.changeClient(c.id)}\n                                                                                    className={ c.id === this.state.activeProject.client_id ? 'selected' : '' }\n                                                                                >\n                                                                                    {c.name}\n                                                                                </li>\n                                                                            ))\n                                                                        } \n                                                                    </ul>\n                                                                    : 'No clients'\n                                                            }\n                                                        </div>\n                                                        : ''\n                                                    }\n                                                </div>\n                                            </div>\n                                            <span>{ this.state.errors.name }</span>\n                                        </div> \n                                    </div>\n                                    <div className=\"popup-form-row-3\">\n                                        <div className=\"popup-selected-color-container box-shadow-light\" onClick={this.toggleColorPalette} >\n                                            <div \n                                                className='popup-selected-color' \n                                                style={{background: `hsl(${this.getColorValueById(this.state.activeProject.color_id)})`}}>\n                                            </div>\n                                            <div className='popup-selected-color-container-caret'>\n                                                <FaCaretDown size={15} />\n                                            </div>\n                                            { this.state.showColorPalette \n                                                ? \n                                                <div className=\"popup-color-palette-container box-shadow-heavy\">\n                                                    <ColorPalette \n                                                        selected={this.state.activeProject.color_id} \n                                                        handleChange={this.changeColor} \n                                                        colors={this.state.colors} \n                                                    />\n                                                </div>\n                                                : ''\n                                            }\n                                            \n                                        </div>\n                                        <div>\n                                            {\n                                                this.state.savingToDb \n                                                    ?   \n                                                        <div className=\"button create-button button-disabled\">\n                                                            Creating Project... \n                                                        </div>\n                                                    :\n                                                        <div className=\"button create-button\" onClick={this.save}>\n                                                            {showPopup === 'edit' ? 'Save' : 'Create'} Project\n                                                        </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                                \n                                \n\n                    }\n                    \n                </div>\n                <List \n                    config={this.state.tableConfig} \n                    data={this.state.projects} \n                    edit={this.edit}\n                    delete={this.confirmDelete}\n                />\n            </div>\n        </CSSTransition>\n        );\n    }\n};\n\nexport default Projects;","import React from 'react';\nimport Ajax from '../../core/Helpers/AjaxHelper';\n\nimport { FaTimes } from 'react-icons/fa';\n\nimport List from '../shared/listing/table';\nimport ConfirmDelete from '../shared/popups/ConfirmDelete';\nimport LoadingAnimation from '../shared/loadingAnimation';\n\nimport { CSSTransition } from 'react-transition-group';\n\nconst emptyClient = {\n    name: ''\n};\n\nclass Clients extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            clients: [],\n            showPopup: false, // Valid values are: create, edit, delete and false.\n            activeClient: {...emptyClient},\n            storingNewClient: false,\n            tableConfig: {\n                head: false,\n                columns: [\n                    {name: 'name'},\n                ]\n            }\n        }\n\n        this.showPopup = this.showPopup.bind(this);\n        this.deleteClient = this.deleteClient.bind(this);\n        this.editClient = this.editClient.bind(this);\n        this.createClient = this.createClient.bind(this);\n        this.storeClient = this.storeClient.bind(this);\n        this.saveClient = this.saveClient.bind(this);\n        this.hidePopup = this.hidePopup.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.confirmDelete = this.confirmDelete.bind(this);\n\n    }\n\n    handleChange(event) {\n        let client = {...this.state.activeClient};\n        client.name = event.target.value;\n        this.setState({activeClient: client});\n    }\n\n    confirmDelete(id) {\n        this.showPopup('delete', id);\n    }\n\n    showPopup(type, id=0) {\n        let newState = {\n            showPopup: type,\n        };\n\n        if (id !== 0) {\n            newState.activeClient = this.state.clients.filter(c => c.id === id)[0];\n        }\n        this.setState(newState);\n    }\n\n    hidePopup() {\n        this.setState({\n            showPopup: false,\n            activeClient: {...emptyClient},\n        })\n    }\n\n    deleteClient() {\n        const id = this.state.activeClient.id;\n        const clients = [...this.state.clients].filter(c => c.id !== id);\n        this.setState({clients});\n        this.hidePopup();\n\n        Ajax.delete('/app/clients/' + id, {})\n            .catch(err => console.log(err));\n    }\n\n    editClient(id) {\n        this.showPopup('edit', id);\n    }\n\n    saveClient() {\n\n        if (!this.state.activeClient.id) {\n            return this.storeClient();\n        }\n\n        const clients = this.state.clients.map(c => {\n            if (this.state.activeClient.id === c.id) {\n                return this.state.activeClient;\n            }\n            return c;\n        });\n        this.setState({clients});\n        this.hidePopup();\n        \n        Ajax.put('/app/clients/' + this.state.activeClient.id, this.state.activeClient)\n            .catch(err => console.log(err));\n    }\n\n    createClient() {\n        this.showPopup('create');\n    }\n\n    storeClient() {\n\n        // Just return if the Create button was already clicked.\n        if (this.state.storingNewClient) {\n            return;\n        }\n\n        this.setState({storingNewClient: true});\n        Ajax.post('/app/clients', this.state.activeClient)\n            .then(res => {\n                let clients = [...this.state.clients];\n                clients.push(res.client);\n                this.setState({clients, storingNewClient: false}); \n                this.hidePopup();\n            })\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        Ajax.get('/app/clients')\n            .then(res => {\n                this.setState({clients: res.clients, loading: false});\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n\n        if (this.state.loading) {\n            return (<LoadingAnimation/>);\n        }\n\n        const showPopup = this.state.showPopup;\n        return (\n        <CSSTransition\n            in={true}\n            appear={true}\n            timeout={300}\n            classNames=\"fade\"\n            >\n            <div>\n\n                <div className='main-header'>\n                    <h1>Clients</h1>\n                    <div \n                        className=\"button create-button\" \n                        onClick={this.createClient}>Create Client\n                    </div>\n                </div>\n                \n                <div className={ 'popup-overlay ' + (showPopup ? 'popup-show' : 'popup-hide')}>\n\n                    {\n                        showPopup === 'delete' \n                            ? \n                                <ConfirmDelete \n                                    text={`Deleting Client ${this.state.activeClient.name}`}\n                                    delete={this.deleteClient}\n                                    close={this.hidePopup}\n                                /> \n                            : \n                                <div>\n                                    <div className='popup-edit box-shadow-heavy' >\n                                        <div className=\"popup-form-row-1\">\n                                            <h3 className=\"popup-heading\">\n                                                {(this.state.activeClient.id ? 'Edit' : 'Create') + ' Client'}\n                                            </h3>\n                                            <div className=\"popup-close\" onClick={this.hidePopup} >\n                                                <FaTimes size={20}/>\n                                            </div>\n                                        </div>\n                                        <div className='popup-form-row-2'>\n                                            <input \n                                                className=\"popup-input\"\n                                                type=\"text\" \n                                                value={this.state.activeClient.name} \n                                                onChange={this.handleChange} \n                                            />\n                                        </div>\n                                        <div className=\"popup-form-edit-row-3\">\n                                            {\n                                                this.state.storingNewClient\n                                                    ?\n                                                        <div className='button button-disabled'>\n                                                            Creating...\n                                                        </div>\n                                                    :\n                                                        <div \n                                                            className='button create-button' \n                                                            onClick={this.saveClient}>\n                                                            {showPopup === 'edit' ? 'Save' : 'Create'}\n                                                        </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n\n                    }\n                    \n                </div>\n\n                <List \n                    config={this.state.tableConfig}\n                    data={this.state.clients}\n                    delete={this.confirmDelete}\n                    edit={this.editClient}\n                />\n\n                \n            </div>\n        </CSSTransition>\n        );\n    }\n};\n\nexport default Clients;","import React from 'react';\nimport Ajax from '../../core/Helpers/AjaxHelper';\n\nimport { FaTimes } from 'react-icons/fa';\n\n\nimport List from '../shared/listing/table';\nimport ConfirmDelete from '../shared/popups/ConfirmDelete';\nimport LoadingAnimation from '../shared/loadingAnimation';\n\nimport { CSSTransition } from 'react-transition-group';\n\nconst emptyLabel = {\n    name: ''\n};\n\nclass Labels extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            labels: [],\n            showPopup: false, // Valid values are: create, edit, delete and false.\n            activeLabel: {...emptyLabel},\n            storingNewLabel: false,\n            tableConfig: {\n                head: false,\n                columns: [\n                    {name: 'name'},\n                ]\n            }\n        }\n\n        this.showPopup = this.showPopup.bind(this);\n        this.delete = this.delete.bind(this);\n        this.edit = this.edit.bind(this);\n        this.create = this.create.bind(this);\n        this.store = this.store.bind(this);\n        this.save = this.save.bind(this);\n        this.hidePopup = this.hidePopup.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.confirmDelete = this.confirmDelete.bind(this);\n    }\n\n    handleChange(event) {\n        let label = {...this.state.activeLabel};\n        label.name = event.target.value;\n        this.setState({activeLabel: label});\n    }\n\n    confirmDelete(id) {\n        this.showPopup('delete', id);\n    }\n\n    showPopup(type, id=0) {\n        let newState = {\n            showPopup: type,\n        };\n\n        if (id !== 0) {\n            newState.activeLabel = this.state.labels.filter(c => c.id === id)[0];\n        }\n        this.setState(newState);\n    }\n\n    hidePopup() {\n        this.setState({\n            showPopup: false,\n            activeLabel: {...emptyLabel},\n        })\n    }\n\n    delete() {\n        const id = this.state.activeLabel.id;\n        const labels = [...this.state.labels].filter(c => c.id !== id);\n        this.setState({labels});\n        this.hidePopup();\n\n        Ajax.delete('/app/labels/' + id, {})\n            .catch(err => console.log(err));\n    }\n\n    edit(id) {\n        this.showPopup('edit', id);\n    }\n\n    save() {\n        if (!this.state.activeLabel.id) {\n            return this.store();\n        }\n\n        const labels = this.state.labels.map(c => {\n            if (this.state.activeLabel.id === c.id) {\n                return this.state.activeLabel;\n            }\n            return c;\n        });\n        this.setState({labels});\n        this.hidePopup();\n        \n        Ajax.put('/app/labels/' + this.state.activeLabel.id, this.state.activeLabel)\n            .catch(err => console.log(err));\n    }\n\n    create() {\n        this.showPopup('create');\n    }\n\n    store() {\n\n        // Just return if the Create button was already clicked.\n        if (this.state.storingNewLabel) {\n            return;\n        }\n\n        this.setState({storingNewLabel: true});\n        Ajax.post('/app/labels', this.state.activeLabel)\n            .then(res => {\n                let labels = [...this.state.labels];\n                labels.push(res.label);\n                this.setState({labels, storingNewLabel: false}); \n                this.hidePopup();\n            })\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        Ajax.get('/app/labels')\n            .then(res => {\n                this.setState({labels: res.labels, loading: false});\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        \n        if (this.state.loading) {\n            return (<LoadingAnimation/>);\n        }\n        \n        const showPopup = this.state.showPopup;\n\n        return (\n        <CSSTransition\n            in={true}\n            appear={true}\n            timeout={300}\n            classNames=\"fade\"\n            >\n            <div>\n\n                <div className='main-header'>\n                    <h1>Labels</h1>\n                    <div \n                        className=\"button create-button\" \n                        onClick={this.create}>Create Label\n                    </div>\n                </div>\n                \n                <div className={ 'popup-overlay ' + (showPopup ? 'popup-show' : 'popup-hide')}>\n\n                    {\n                        showPopup === 'delete' \n                            ? \n                                <ConfirmDelete \n                                    text={`Deleting Label ${this.state.activeLabel.name}`}\n                                    delete={this.delete}\n                                    close={this.hidePopup}\n                                /> \n                            : \n                                <div>\n                                    <div className='popup-edit box-shadow-heavy' >\n                                        <div className=\"popup-form-row-1\">\n                                            <h3 className=\"popup-heading\">\n                                                {(this.state.activeLabel.id ? 'Edit' : 'Create') + ' Label'}\n                                            </h3>\n                                            <div className=\"popup-close\" onClick={this.hidePopup} >\n                                                <FaTimes size={20}/>\n                                            </div>\n                                        </div>\n                                        <div className='popup-form-row-2'>\n                                            <input \n                                                className=\"popup-input\"\n                                                type=\"text\" \n                                                value={this.state.activeLabel.name} \n                                                onChange={this.handleChange} \n                                            />\n                                        </div>\n                                        <div className=\"popup-form-edit-row-3\">\n                                            {\n                                                this.state.storingNewLabel\n                                                    ?\n                                                        <div className='button button-disabled'>\n                                                            Creating...\n                                                        </div>\n                                                    :\n                                                        <div \n                                                            className='button create-button' \n                                                            onClick={this.save}>\n                                                            {showPopup === 'edit' ? 'Save' : 'Create'}\n                                                        </div>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n\n                    }\n                    \n                </div>\n\n                <List \n                    config={this.state.tableConfig}\n                    data={this.state.labels}\n                    delete={this.confirmDelete}\n                    edit={this.edit}\n                />\n\n                \n            </div>\n        </CSSTransition>\n        );\n    }\n};\n\nexport default Labels;","import React from 'react';\n// import logo from './logo.svg';\nimport './backend/styles/app.scss';\n\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\n\nimport Timer from \"./backend/components/tasks\";\nimport Reports from \"./backend/components/reports\";\nimport Projects from \"./backend/components/projects\";\nimport Clients from \"./backend/components/clients\";\nimport Labels from \"./backend/components/labels\";\n\nimport { FaClock, FaChartBar, FaRegFolder, FaUser, FaTags, FaSignOutAlt, FaPowerOff } from 'react-icons/fa';\n\nconst logout = () => window.location = '/logout';\n\n\nconst App = () => (\n    <Router>\n      <div id=\"wrapper\">\n        <aside id=\"sidebar-left\">\n          <div>\n            <h3>T4</h3>\n          </div>\n          <nav>\n            <ul>\n              <li>\n                <NavLink\n                    exact\n                    to=\"/app\"\n                    activeClassName=\"left-nav-active\"\n                >\n                  <FaClock size={20} />\n                  <span>Timer</span>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                    to=\"/app/reports\"\n                    activeClassName=\"left-nav-active\"\n                >\n                  <FaChartBar size={20} />\n                  <span>Reports</span>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                    to=\"/app/projects\"\n                    activeClassName=\"left-nav-active\"\n                >\n                  <FaRegFolder size={20} />\n                  <span>Projects</span>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                    to=\"/app/clients\"\n                    activeClassName=\"left-nav-active\"\n                >\n                  <FaUser size={20} />\n                  <span>Clients</span>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                    to=\"/app/labels\"\n                    activeClassName=\"left-nav-active\"\n                >\n                  <FaTags size={20} />\n                  <span>Labels</span>\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n          <div onClick={logout} className=\"sidenav-sign-out\">\n            <div>Sign Out</div>\n            <span className=\"sign-out-icon\"><FaSignOutAlt size={20} /></span>\n            <span className=\"power-out-icon\"><FaPowerOff size={20} /></span>\n          </div>\n        </aside>\n        <main>\n          <Route exact path=\"/app\" component={Timer} />\n          <Route path=\"/app/reports\" component={Reports} />\n          <Route path=\"/app/projects\" component={Projects} />\n          <Route path=\"/app/clients\" component={Clients} />\n          <Route path=\"/app/labels\" component={Labels} />\n        </main>\n      </div>\n    </Router>\n);\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}